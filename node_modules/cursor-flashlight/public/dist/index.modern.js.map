{"version":3,"file":"index.modern.js","sources":["../../src/eventHandlers.ts","../../src/sheet.ts","../../src/index.ts"],"sourcesContent":["const handleUpdate = (x: number, y: number) => {\r\n  document.documentElement.style.setProperty('--cursorX', x + 'px');\r\n  document.documentElement.style.setProperty('--cursorY', y + 'px');\r\n};\r\n\r\nconst handleMouseMove = (e: MouseEvent) => {\r\n  handleUpdate(e.clientX, e.clientY);\r\n};\r\n\r\nconst handleTouchMove = (e: TouchEvent) => {\r\n  handleUpdate(e.touches[0].clientX, e.touches[0].clientY);\r\n};\r\n\r\nexport const registerEventHandlers = () => {\r\n  document.addEventListener('mousemove', handleMouseMove);\r\n  document.addEventListener('touchmove', handleTouchMove);\r\n}\r\n\r\nexport const unregisterEventHandlers = () => {\r\n  document.removeEventListener('mousemove', handleMouseMove);\r\n  document.removeEventListener('touchmove', handleTouchMove);\r\n}","import css from 'minify-css.macro';\r\n\r\nconst sheet = document.head.appendChild(document.createElement('style'))\r\n  .sheet as CSSStyleSheet;\r\n\r\nlet ruleIndices: number[] = [];\r\n\r\nexport const insertNeededRules = ({ size }: { size: string }) => {\r\n  ruleIndices.push(\r\n    sheet.insertRule(css`\r\n    @media (hover: hover) {\r\n      :root {\r\n        --flashlightCursorX: 50vw;\r\n        --flashlightCursorY: 50vh;\r\n        --flashlightBg: radial-gradient(\r\n          circle ${size} at var(--cursorX) var(--cursorY),\r\n          rgba(0,0,0,0) 0%,\r\n          rgba(0,0,0,.5) 80%,\r\n          rgba(0,0,0,.75) 100%\r\n        );\r\n      }\r\n    }`),\r\n  );\r\n\r\n  ruleIndices.push(\r\n    sheet.insertRule(css`\r\n    @media (hover: hover) {\r\n      :root:before {\r\n        content: '';\r\n        display: block;\r\n        width: 100%;\r\n        height: 100%;\r\n        position: fixed;\r\n        pointer-events: none;\r\n        background: var(--flashlightBg);\r\n      }\r\n    }`),\r\n  );\r\n};\r\n\r\nexport const cleanUpRules = () => {\r\n  ruleIndices.forEach((index) => {\r\n    sheet.deleteRule(index);\r\n  });\r\n\r\n  ruleIndices = [];\r\n};\r\n","import { registerEventHandlers, unregisterEventHandlers } from './eventHandlers';\r\nimport { cleanUpRules, insertNeededRules } from './sheet';\r\n\r\nlet _isEnabled = false;\r\n\r\nexport const enable = ({ size } = { size: '10vmax' }) => {\r\n  if (_isEnabled) return;\r\n\r\n  insertNeededRules({ size })\r\n  registerEventHandlers()\r\n\r\n  _isEnabled = true;\r\n};\r\n\r\nexport const disable = () => {\r\n  if (!_isEnabled) return;\r\n\r\n  unregisterEventHandlers()\r\n  cleanUpRules()\r\n\r\n  _isEnabled = false;\r\n};\r\n\r\nexport const isEnabled = () => _isEnabled;\r\n"],"names":["handleUpdate","x","y","document","documentElement","style","setProperty","handleMouseMove","e","clientX","clientY","handleTouchMove","touches","sheet","head","appendChild","createElement","ruleIndices","_isEnabled","enable","size","push","insertRule","insertNeededRules","addEventListener","disable","removeEventListener","forEach","index","deleteRule","isEnabled"],"mappings":"AAAA,MAAMA,EAAe,CAACC,EAAWC,KAC/BC,SAASC,gBAAgBC,MAAMC,YAAY,YAAaL,EAAI,MAC5DE,SAASC,gBAAgBC,MAAMC,YAAY,YAAaJ,EAAI,OAGxDK,EAAmBC,IACvBR,EAAaQ,EAAEC,QAASD,EAAEE,UAGtBC,EAAmBH,IACvBR,EAAaQ,EAAEI,QAAQ,GAAGH,QAASD,EAAEI,QAAQ,GAAGF,UCR5CG,EAAQV,SAASW,KAAKC,YAAYZ,SAASa,cAAc,UAC5DH,MAEH,IAAII,EAAwB,GCFxBC,GAAa,EAEJC,MAAAA,EAAS,EAAGC,KAAAA,GAAS,CAAEA,KAAM,aACpCF,IDC2B,GAAGE,KAAAA,MAClCH,EAAYI,KACVR,EAAMS,qOAeRL,EAAYI,KACVR,EAAMS,uKCjBRC,CAAkB,CAAEH,KAAAA,IFMpBjB,SAASqB,iBAAiB,YAAajB,GACvCJ,SAASqB,iBAAiB,YAAab,GEJvCO,GAAa,IAGFO,EAAU,KAChBP,IFILf,SAASuB,oBAAoB,YAAanB,GAC1CJ,SAASuB,oBAAoB,YAAaf,GCqB1CM,EAAYU,QAASC,IACnBf,EAAMgB,WAAWD,KAGnBX,EAAc,GCzBdC,GAAa,IAGFY,EAAY,IAAMZ"}