{"version":3,"file":"macro.dev.mjs","sources":["../../src/macro.ts"],"sourcesContent":["import generate from '@babel/generator'\nimport {createMacro} from 'babel-plugin-macros'\nimport type {Node} from '@babel/core'\n\nexport default createMacro(function evaluateMacros({references}) {\n  references.default.forEach((referencePath) => {\n    if ('quasi' in referencePath.parentPath.node) {\n      const result = referencePath.parentPath.node.quasi.expressions.reduce<\n        Record<string, string>\n      >((p, node: Node) => {\n        if (!node.loc) return p\n        p[`${node.loc.start.line}:${node.loc.start.column}`] = `\\${${\n          generate(node).code\n        }}`\n        return p\n      }, {})\n\n      referencePath.parentPath.node.quasi.quasis.forEach((node) => {\n        if (!node.loc) return\n\n        result[\n          `${node.loc.start.line}:${node.loc.start.column}`\n        ] = node.value.raw\n          .replace(/\\s{2,}|\\n|\\t/g, ' ')\n          .replace(/([:;,([{}>~/])\\s+/g, '$1')\n          .replace(/\\s+([;,)\\]{}>~/!])/g, '$1')\n          .replace(/\\/\\*\\s+/, '/*')\n          .replace(/\\s+\\*\\//, '*/')\n      })\n      const keys = Object.keys(result)\n      keys.sort((a, b) => {\n        const [a0, a1] = a.split(':').map((str) => parseInt(str))\n        const [b0, b1] = b.split(':').map((str) => parseInt(str))\n\n        if (a0 === b0) {\n          return a1 - b1\n        }\n\n        return a0 - b0\n      })\n      referencePath.parentPath.replaceWithSourceString(\n        `\\`${keys\n          .map((k) => result[k])\n          .join('')\n          .trim()}\\``\n      )\n    }\n  })\n}) as (literals: TemplateStringsArray, ...placeholders: any[]) => string\n"],"names":["p","node","loc","start","line","column","generate","code","str","parseInt","a","b","a0","a1","split","map","b0","b1","referencePath","parentPath","result","quasi","expressions","reduce","quasis","forEach","value","raw","replace","keys","Object","sort","replaceWithSourceString","k","join","trim","createMacro","evaluateMacros","references","default"],"mappings":";;;AASQ,eAACA,CAAD,EAAIC,IAAJ,EAAmB;AACnB,MAAI,CAACA,IAAI,CAACC,GAAV,EAAe,OAAOF,CAAP;AACfA,EAAAA,CAAC,CAAIC,IAAI,CAACC,GAAL,CAASC,KAAT,CAAeC,IAAnB,SAA2BH,IAAI,CAACC,GAAL,CAASC,KAAT,CAAeE,MAA1C,CAAD,UACEC,QAAQ,CAACL,IAAD,CAAR,CAAeM,IADjB;AAGA,SAAOP,CAAP;AACD;;AAgBmC,eAACQ,GAAD;AAAA,SAASC,QAAQ,CAACD,GAAD,CAAjB;AAAA;;AACA,eAACA,GAAD;AAAA,SAASC,QAAQ,CAACD,GAAD,CAAjB;AAAA;;AAF1B,eAACE,CAAD,EAAIC,CAAJ,EAAU;AAClB,MAAM,CAACC,EAAD,EAAKC,EAAL,IAAWH,CAAC,CAACI,KAAF,CAAQ,GAAR,EAAaC,GAAb,OAAjB;AACA,MAAM,CAACC,EAAD,EAAKC,EAAL,IAAWN,CAAC,CAACG,KAAF,CAAQ,GAAR,EAAaC,GAAb,OAAjB;;AAEA,MAAIH,EAAE,KAAKI,EAAX,EAAe;AACb,WAAOH,EAAE,GAAGI,EAAZ;AACD;;AAED,SAAOL,EAAE,GAAGI,EAAZ;AACD;;AAlCsB,eAACE,aAAD,EAAmB;AAC5C,MAAI,WAAWA,aAAa,CAACC,UAAd,CAAyBlB,IAAxC,EAA8C;AAC5C,QAAMmB,MAAM,GAAGF,aAAa,CAACC,UAAd,CAAyBlB,IAAzB,CAA8BoB,KAA9B,CAAoCC,WAApC,CAAgDC,MAAhD,QAQZ,EARY,CAAf;AAUAL,IAAAA,aAAa,CAACC,UAAd,CAAyBlB,IAAzB,CAA8BoB,KAA9B,CAAoCG,MAApC,CAA2CC,OAA3C,CAAoDxB,IAAD,IAAU;AAC3D,UAAI,CAACA,IAAI,CAACC,GAAV,EAAe;AAEfkB,MAAAA,MAAM,CACDnB,IAAI,CAACC,GAAL,CAASC,KAAT,CAAeC,IADd,SACsBH,IAAI,CAACC,GAAL,CAASC,KAAT,CAAeE,MADrC,CAAN,GAEIJ,IAAI,CAACyB,KAAL,CAAWC,GAAX,CACDC,OADC,CACO,eADP,EACwB,GADxB,EAEDA,OAFC,CAEO,oBAFP,EAE6B,IAF7B,EAGDA,OAHC,CAGO,qBAHP,EAG8B,IAH9B,EAIDA,OAJC,CAIO,SAJP,EAIkB,IAJlB,EAKDA,OALC,CAKO,SALP,EAKkB,IALlB,CAFJ;AAQD,KAXD;AAYA,QAAMC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYT,MAAZ,CAAb;AACAS,IAAAA,IAAI,CAACE,IAAL;AAUAb,IAAAA,aAAa,CAACC,UAAd,CAAyBa,uBAAzB,OACOH,IAAI,CACNd,GADE,CACGkB,CAAD,IAAOb,MAAM,CAACa,CAAD,CADf,EAEFC,IAFE,CAEG,EAFH,EAGFC,IAHE,EADP;AAMD;AACF;;AA3CH,yBAAeC,WAAW,CAAC,SAASC,cAAT,OAAsC;AAAA,MAAd;AAACC,IAAAA;AAAD,GAAc;AAC/DA,EAAAA,UAAU,CAACC,OAAX,CAAmBd,OAAnB;AA2CD,CA5CyB,CAA1B;;;;"}